name: Deploy
description: Build and push a docker image to Docker Hub

outputs:
  tag:
    description: "Tags for the docker image"
    value: ${{ steps.meta.outputs.tags[0] }}

inputs:
  platform:
    description: The platform to build for
    type: string
    required: true
  build_args:
    description: Build arguments to pass to the Docker build
    default: ""
    type: string
    required: false
  tag:
    description: Docker hub tag to push to
    type: string
    required: true
  # Secrets
  DOCKER_USERNAME:
    required: true
  DOCKER_PASSWORD:
    required: true
  MACOS_PASSWORD:
    required: true

runs:
  using: composite
  steps:
  - name: Checkout this repo
    uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  - name: Set up Docker Context for Buildx
    shell: bash
    id: buildx-context
    run: |
      docker context use builders || docker context create builders
  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
    with:
      endpoint: builders
  - name: Unlock MacOS keychain for Docker Hub login
    shell: bash
    if: runner.os == 'macOS'
    run: |
      security -v unlock-keychain -p ${{ inputs.MACOS_PASSWORD }} ~/Library/Keychains/login.keychain-db
  - name: Login to Docker Hub
    uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
    with:
      username: ${{ inputs.DOCKER_USERNAME }}
      password: ${{ inputs.DOCKER_PASSWORD }}
  - name: Generate slug
    id: vars
    shell: bash
    run: |
      echo "slug=$(echo '${{ inputs.platform }}' | tr '/' '-')" >> $GITHUB_OUTPUT
      echo "DEBUG"
      echo "${{ inputs.tag }}"
  - name: Docker build & push
    id: docker_build
    uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5.4.0
    with:
      context: '.'
      file: Dockerfile
      tags: ${{ inputs.tag }}-${{ steps.vars.outputs.slug }}
      push: true
      platforms: ${{ inputs.platform }}
      build-args: ${{ inputs.build_args }}
  - name: Image digest & tags
    shell: bash
    run: |
      cat << EOF
      digest: ${{ steps.docker_build.outputs.digest }}
      tags:
        ${{ inputs.tag }}-${{ steps.vars.outputs.slug }}
      EOF
